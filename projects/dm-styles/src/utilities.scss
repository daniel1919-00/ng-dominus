@use 'config';

@function generate-class-name($base-class-name, $forced-version) {
    $force-flag: '';

    @if $forced-version {
        $force-flag: '-f';
    }

    @return config.$namespace + config.$namespace-separator + $base-class-name + $force-flag;
}

@mixin generate-class($class-name, $properties, $generate-forced-version) {
    $class-name: generate-class-name($class-name, false);
    $class-name-f: generate-class-name($class-name, true);

    @if $properties != null {
        .#{$class-name} {
            @each $property, $value in $properties {
                #{$property}: #{$value};
            }
        }

        @if $generate-forced-version {
            .#{$class-name-f} {
                @each $property, $value in $properties {
                    #{$property}: #{$value} !important;
                }
            }
        }
    }

    @if $generate-forced-version {
        .#{$class-name},
        .#{$class-name-f} {
            @content;
        }
    } @else {
        .#{$class-name} {
            @content;
        }
    }
}

@mixin generate-responsive-media() {
    @each $breakpoint, $min-width in config.$responsive-breakpoints {
        @media (min-width: #{$min-width}) {
            @content($breakpoint);
        }
    }
}

@mixin generate-responsive-class($class-name, $properties, $generate-forced-version) {
    @include generate-responsive-media using($breakpoint) {
        @include generate-class($breakpoint + '' + config.$responsive-namespace-separator + $class-name, $properties, $generate-forced-version) {
            @content;
        }
    }
}
